
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ATRIB COMENT DEC_TIPO FIM_ESCOPO FIM_EXP FIM_SEN IDENT INIC_EXP INIT_ESCOPO LACO_FOR OP_AND OP_DIF OP_DIV OP_ELSE OP_IF OP_IGUAL OP_IN OP_MAIOR OP_MAIOR_IG OP_MENOR OP_MENOR_IG OP_MULT OP_NOT OP_OR OP_SOMA OP_SUB OP_TO TIPO_BOOL TIPO_FL TIPO_INT TIPO_STR VAL_BOOL VAL_FL_N VAL_FL_P VAL_INT_N VAL_INT_P VAL_NULL VAL_STR\n        statement : IDENT DEC_TIPO tipo ATRIB valor FIM_SEN\n                  | IDENT DEC_TIPO tipo ATRIB valor FIM_SEN statement\n    \n    ident : IDENT\n    \n    tipo : TIPO_INT\n         | TIPO_FL\n         | TIPO_BOOL\n         | TIPO_STR\n    \n    valor : VAL_INT_P\n          | VAL_INT_N\n          | VAL_FL_P\n          | VAL_FL_N\n          | VAL_BOOL\n          | VAL_STR\n          | VAL_NULL\n    '
    
_lr_action_items = {'IDENT':([0,18,],[2,2,]),'$end':([1,18,19,],[0,-1,-2,]),'DEC_TIPO':([2,],[3,]),'TIPO_INT':([3,],[5,]),'TIPO_FL':([3,],[6,]),'TIPO_BOOL':([3,],[7,]),'TIPO_STR':([3,],[8,]),'ATRIB':([4,5,6,7,8,],[9,-4,-5,-6,-7,]),'VAL_INT_P':([9,],[11,]),'VAL_INT_N':([9,],[12,]),'VAL_FL_P':([9,],[13,]),'VAL_FL_N':([9,],[14,]),'VAL_BOOL':([9,],[15,]),'VAL_STR':([9,],[16,]),'VAL_NULL':([9,],[17,]),'FIM_SEN':([10,11,12,13,14,15,16,17,],[18,-8,-9,-10,-11,-12,-13,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,18,],[1,19,]),'tipo':([3,],[4,]),'valor':([9,],[10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> IDENT DEC_TIPO tipo ATRIB valor FIM_SEN','statement',6,'p_statement','MiniCompN.py',216),
  ('statement -> IDENT DEC_TIPO tipo ATRIB valor FIM_SEN statement','statement',7,'p_statement','MiniCompN.py',217),
  ('ident -> IDENT','ident',1,'p_ident','MiniCompN.py',234),
  ('tipo -> TIPO_INT','tipo',1,'p_tipo','MiniCompN.py',240),
  ('tipo -> TIPO_FL','tipo',1,'p_tipo','MiniCompN.py',241),
  ('tipo -> TIPO_BOOL','tipo',1,'p_tipo','MiniCompN.py',242),
  ('tipo -> TIPO_STR','tipo',1,'p_tipo','MiniCompN.py',243),
  ('valor -> VAL_INT_P','valor',1,'p_valor','MiniCompN.py',249),
  ('valor -> VAL_INT_N','valor',1,'p_valor','MiniCompN.py',250),
  ('valor -> VAL_FL_P','valor',1,'p_valor','MiniCompN.py',251),
  ('valor -> VAL_FL_N','valor',1,'p_valor','MiniCompN.py',252),
  ('valor -> VAL_BOOL','valor',1,'p_valor','MiniCompN.py',253),
  ('valor -> VAL_STR','valor',1,'p_valor','MiniCompN.py',254),
  ('valor -> VAL_NULL','valor',1,'p_valor','MiniCompN.py',255),
]
